# Generated by Django 2.1.4 on 2019-01-09 16:14

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0005_auto_20190109_1114'),
        ('stocking', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockingEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_id', models.CharField(max_length=100, unique=True, verbose_name='unique event identifier provided by agency')),
                ('date', models.DateField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, db_index=True, null=True)),
                ('year', models.IntegerField(db_index=True)),
                ('site', models.CharField(blank=True, max_length=100, null=True)),
                ('st_site', models.CharField(blank=True, max_length=100, null=True)),
                ('dd_lat', models.FloatField(blank=True, null=True)),
                ('dd_lon', models.FloatField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('grid_5', models.CharField(blank=True, max_length=4, null=True)),
                ('no_stocked', models.IntegerField()),
                ('year_class', models.IntegerField(db_index=True)),
                ('agemonth', models.IntegerField(blank=True, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('lotcode', models.CharField(blank=True, max_length=100, null=True)),
                ('tag_no', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('clipa', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('mark', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('mark_eff', models.FloatField(blank=True, null=True)),
                ('tag_ret', models.FloatField(blank=True, null=True)),
                ('validation', models.IntegerField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=500, null=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='common.Agency')),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='stocking.Condition')),
                ('grid_10', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='common.Grid10')),
                ('lake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='common.Lake')),
                ('latlong_flag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='common.LatLonFlag')),
                ('lifestage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='stocking.LifeStage')),
                ('marks', models.ManyToManyField(to='common.Mark')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='common.Species')),
                ('stateprov', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='common.StateProvince')),
                ('stocking_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='stocking.StockingMethod')),
                ('strain_raw', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocking_events', to='common.StrainRaw')),
            ],
            options={
                'ordering': ['-year', 'stock_id'],
            },
        ),
    ]
