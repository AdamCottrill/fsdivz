# Generated by Django 2.2 on 2019-08-12 13:54

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbrev', models.CharField(max_length=15, unique=True)),
                ('agency_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Agencies',
                'ordering': ['abbrev'],
            },
        ),
        migrations.CreateModel(
            name='BuildDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('build_date', models.DateField(editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='CWT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cwt_number', models.CharField(max_length=6)),
                ('tag_type', models.CharField(choices=[('cwt', 'Coded Wire Tag'), ('sequential', 'Sequential Coded Wire Tag')], default='cwt', max_length=10)),
                ('manufacturer', models.CharField(choices=[('mm', 'Micro Mark'), ('nmt', 'Northwest Marine Technology')], default='nmt', max_length=10)),
                ('tag_count', models.IntegerField()),
                ('tag_reused', models.BooleanField(db_index=True, default=False, verbose_name='True if this cwt has been stocked by more than one species, strain, or yearclass')),
                ('multiple_species', models.BooleanField(db_index=True, default=False, verbose_name='True if this cwt has been stocked in more than one species')),
                ('multiple_strains', models.BooleanField(db_index=True, default=False, verbose_name='True if this cwt has been stocked in more than one strain')),
                ('multiple_yearclasses', models.BooleanField(db_index=True, default=False, verbose_name='True if this cwt has been stocked in more than one year class')),
                ('multiple_makers', models.BooleanField(db_index=True, default=False, verbose_name='True if this cwt has been made by more than one tag manufacturer')),
                ('multiple_agencies', models.BooleanField(db_index=True, default=False, verbose_name='True if this cwt has been stocked by more than one agency')),
                ('multiple_lakes', models.BooleanField(db_index=True, default=False, verbose_name='True if this cwt has been stocked in more than one lake')),
                ('multiple_grid10s', models.BooleanField(db_index=True, default=False, verbose_name='True if this cwt has been stocked by more than one 10-minute grid')),
            ],
            options={
                'ordering': ['cwt_number'],
            },
        ),
        migrations.CreateModel(
            name='Lake',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbrev', models.CharField(max_length=2, unique=True)),
                ('lake_name', models.CharField(max_length=30, unique=True)),
                ('shoreline', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'ordering': ['abbrev'],
            },
        ),
        migrations.CreateModel(
            name='LatLonFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(unique=True)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clip_code', models.CharField(max_length=2)),
                ('mark_code', models.CharField(max_length=4, unique=True)),
                ('mark_type', models.CharField(choices=[('chemical', 'Chemical'), ('finclip', 'Fin Clip'), ('tag', 'Tag'), ('unknown', 'Unknown')], default='finclip', max_length=8)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['mark_type', 'mark_code'],
            },
        ),
        migrations.CreateModel(
            name='Readme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(editable=False)),
                ('comment', models.TextField()),
                ('initials', models.CharField(max_length=4)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbrev', models.CharField(max_length=5, unique=True)),
                ('common_name', models.CharField(max_length=50, unique=True)),
                ('speciescommon', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('scientific_name', models.CharField(blank=True, max_length=50, null=True)),
                ('species_code', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Species',
                'ordering': ['abbrev'],
            },
        ),
        migrations.CreateModel(
            name='StateProvince',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbrev', models.CharField(max_length=5, unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(max_length=300)),
                ('country', models.CharField(choices=[('USA', 'U.S.A.'), ('CAN', 'Canada')], max_length=3)),
            ],
            options={
                'ordering': ['abbrev'],
            },
        ),
        migrations.CreateModel(
            name='Strain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strain_code', models.CharField(max_length=10)),
                ('strain_label', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('strain_species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Species')),
            ],
            options={
                'ordering': ['species__abbrev', 'strain_code'],
            },
        ),
        migrations.CreateModel(
            name='StrainRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_strain', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rawstrain', to='common.Species')),
                ('strain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rawstrain', to='common.Strain')),
            ],
            options={
                'ordering': ['species__abbrev', 'raw_strain'],
            },
        ),
        migrations.AddField(
            model_name='species',
            name='strains',
            field=models.ManyToManyField(related_name='species', through='common.StrainRaw', to='common.Strain'),
        ),
        migrations.CreateModel(
            name='ManagementUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=25)),
                ('slug', models.SlugField(blank=True, editable=False, unique=True)),
                ('description', models.CharField(max_length=300)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('primary', models.BooleanField(db_index=True, default=False, verbose_name='Primary management unit type for this jurisdiciton.')),
                ('mu_type', models.CharField(choices=[('mu', 'Management Unit'), ('ltrz', 'Lake Trout Rehabilitation Zone'), ('qma', 'Quota Management Area'), ('aa', 'Assessment Area'), ('stat_dist', 'Statistical District')], default='mu', max_length=10)),
                ('lake', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='common.Lake')),
            ],
            options={
                'ordering': ['lake__abbrev', 'mu_type', 'label'],
            },
        ),
        migrations.CreateModel(
            name='Jurisdiction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=5, unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(max_length=300)),
                ('shoreline', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('lake', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='common.Lake')),
                ('stateprov', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='common.StateProvince')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Grid10',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grid', models.CharField(max_length=4)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('centroid', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('lake', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='common.Lake')),
            ],
            options={
                'ordering': ['lake__abbrev', 'grid'],
            },
        ),
        migrations.CreateModel(
            name='CWTsequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq_start', models.IntegerField(default=1)),
                ('seq_end', models.IntegerField(default=1)),
                ('cwt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cwt_series', to='common.CWT')),
            ],
            options={
                'ordering': ['cwt__cwt_number', 'seq_start'],
            },
        ),
    ]
